{"ast":null,"code":"let clientes = [{\n  id: 1,\n  nome: 'EVERTON DENOIS',\n  cpf: '222.299.468-38',\n  dataNasc: '13/10/1982',\n  email: 'cliente1@example.com',\n  telefone: '(11) 1111-1111',\n  endereco: 'OTTO WERNER ROSEL, 811'\n}, {\n  id: 2,\n  nome: 'ANA AMELIA BERNAL',\n  cpf: '222.299.468-38',\n  dataNasc: '13/10/1982',\n  email: 'cliente2@example.com',\n  telefone: '(22) 2222-2222',\n  endereco: 'OTTO WERNER ROSEL, 811'\n}, {\n  id: 3,\n  nome: 'LUCIANA DA SILVA',\n  cpf: '222.299.468-38',\n  dataNasc: '13/10/1982',\n  email: 'cliente3@example.com',\n  telefone: '(33) 3333-3333',\n  endereco: 'JOSE BENETTI, 41'\n}];\nconst getListaClientes = () => {\n  return clientes;\n};\nconst getClienteById = id => {\n  return clientes.find(cliente => cliente.id === id);\n};\nconst adicionarCliente = cliente => {\n  cliente.id = clientes.length + 1;\n  clientes.push(cliente);\n};\nconst atualizarCliente = (id, clienteAtualizado) => {\n  clientes = clientes.map(cliente => cliente.id === id ? clienteAtualizado : cliente);\n};\nconst deletarCliente = id => {\n  clientes = clientes.filter(cliente => cliente.id !== id);\n};\nexport default {\n  getListaClientes,\n  getClienteById,\n  adicionarCliente,\n  atualizarCliente,\n  deletarCliente\n};","map":{"version":3,"names":["clientes","id","nome","cpf","dataNasc","email","telefone","endereco","getListaClientes","getClienteById","find","cliente","adicionarCliente","length","push","atualizarCliente","clienteAtualizado","map","deletarCliente","filter"],"sources":["C:/PROJETOS/gestao_react/src/services/clienteService.js"],"sourcesContent":["let clientes = [\r\n  { id: 1, nome: 'EVERTON DENOIS', cpf: '222.299.468-38', dataNasc: '13/10/1982', email: 'cliente1@example.com', telefone: '(11) 1111-1111', endereco:'OTTO WERNER ROSEL, 811' },\r\n  { id: 2, nome: 'ANA AMELIA BERNAL', cpf: '222.299.468-38', dataNasc: '13/10/1982', email: 'cliente2@example.com', telefone: '(22) 2222-2222', endereco:'OTTO WERNER ROSEL, 811' },\r\n  { id: 3, nome: 'LUCIANA DA SILVA', cpf: '222.299.468-38', dataNasc: '13/10/1982', email: 'cliente3@example.com', telefone: '(33) 3333-3333' , endereco:'JOSE BENETTI, 41'},\r\n];\r\n  \r\nconst getListaClientes = () => {\r\n  return clientes;\r\n};\r\n\r\nconst getClienteById = (id) => {\r\n  return clientes.find(cliente => cliente.id === id);\r\n};\r\n\r\nconst adicionarCliente = (cliente) => {\r\n  cliente.id = clientes.length + 1;\r\n  clientes.push(cliente);\r\n};\r\n\r\nconst atualizarCliente = (id, clienteAtualizado) => {\r\n  clientes = clientes.map(cliente => (cliente.id === id ? clienteAtualizado : cliente));\r\n};\r\n\r\nconst deletarCliente = (id) => {\r\n  clientes = clientes.filter(cliente => cliente.id !== id);\r\n};\r\n\r\nexport default {\r\n  getListaClientes,\r\n  getClienteById,\r\n  adicionarCliente,\r\n  atualizarCliente,\r\n  deletarCliente,\r\n};\r\n  "],"mappings":"AAAA,IAAIA,QAAQ,GAAG,CACb;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,GAAG,EAAE,gBAAgB;EAAEC,QAAQ,EAAE,YAAY;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,QAAQ,EAAE,gBAAgB;EAAEC,QAAQ,EAAC;AAAyB,CAAC,EAC9K;EAAEN,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,mBAAmB;EAAEC,GAAG,EAAE,gBAAgB;EAAEC,QAAQ,EAAE,YAAY;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,QAAQ,EAAE,gBAAgB;EAAEC,QAAQ,EAAC;AAAyB,CAAC,EACjL;EAAEN,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,GAAG,EAAE,gBAAgB;EAAEC,QAAQ,EAAE,YAAY;EAAEC,KAAK,EAAE,sBAAsB;EAAEC,QAAQ,EAAE,gBAAgB;EAAGC,QAAQ,EAAC;AAAkB,CAAC,CAC3K;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAOR,QAAQ;AACjB,CAAC;AAED,MAAMS,cAAc,GAAIR,EAAE,IAAK;EAC7B,OAAOD,QAAQ,CAACU,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC;AACpD,CAAC;AAED,MAAMW,gBAAgB,GAAID,OAAO,IAAK;EACpCA,OAAO,CAACV,EAAE,GAAGD,QAAQ,CAACa,MAAM,GAAG,CAAC;EAChCb,QAAQ,CAACc,IAAI,CAACH,OAAO,CAAC;AACxB,CAAC;AAED,MAAMI,gBAAgB,GAAGA,CAACd,EAAE,EAAEe,iBAAiB,KAAK;EAClDhB,QAAQ,GAAGA,QAAQ,CAACiB,GAAG,CAACN,OAAO,IAAKA,OAAO,CAACV,EAAE,KAAKA,EAAE,GAAGe,iBAAiB,GAAGL,OAAQ,CAAC;AACvF,CAAC;AAED,MAAMO,cAAc,GAAIjB,EAAE,IAAK;EAC7BD,QAAQ,GAAGA,QAAQ,CAACmB,MAAM,CAACR,OAAO,IAAIA,OAAO,CAACV,EAAE,KAAKA,EAAE,CAAC;AAC1D,CAAC;AAED,eAAe;EACbO,gBAAgB;EAChBC,cAAc;EACdG,gBAAgB;EAChBG,gBAAgB;EAChBG;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}